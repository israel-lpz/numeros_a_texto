{"version":3,"sources":["/home/nyxarsorrow/Documents/Codigo/Libraries/numeros_a_texto/src/index.ts"],"sourcesContent":["function Unidades(num: number) {\n    const unidades: Record<number, string> = {\n        1: 'un',\n        2: 'dos',\n        3: 'tres',\n        4: 'cuatro',\n        5: 'cinco',\n        6: 'seis',\n        7: 'siete',\n        8: 'ocho',\n        9: 'nueve',\n    };\n    return unidades[num] ?? '';\n}\n\nconst DecenasY = (strSin: string, numUnidades: number) =>\n    strSin + (numUnidades > 0 ? ` y ${Unidades(numUnidades)}` : '');\n\nfunction Decenas(num: number) {\n    let decena = Math.floor(num / 10);\n    let unidad = num - decena * 10;\n\n    console.log({ decena, unidad });\n    if (decena == 1) {\n        const decenas10 = ['diez', 'once', 'doce', 'trece', 'catorce', 'quince'];\n        return decenas10[unidad] ?? 'dieci' + Unidades(num);\n    } else if (decena == 2) {\n        return unidad == 0 ? 'veinte' : 'veinti' + Unidades(num);\n    }\n    const decenas: Record<number, () => string> = {\n        3: () => DecenasY('treinta', unidad),\n        4: () => DecenasY('cuarenta', unidad),\n        5: () => DecenasY('cincuenta', unidad),\n        6: () => DecenasY('sesenta', unidad),\n        7: () => DecenasY('setenta', unidad),\n        8: () => DecenasY('ochenta', unidad),\n        9: () => DecenasY('noventa', unidad),\n    };\n    console.log({ result: decenas[decena]() });\n    return decenas[decena]();\n}\n\nfunction Centenas(num: number) {\n    let numCentenas = Math.floor(num / 100);\n    let numDecenas = num - numCentenas * 100;\n    console.log({ numCentenas, numDecenas });\n    const centenas: Record<number, () => string> = {\n        1: () => (numDecenas > 0 ? `ciento ${Decenas(numDecenas)}` : 'cien'),\n        2: () => `doscientos ${Decenas(numDecenas)}`,\n        3: () => `trescientos ${Decenas(numDecenas)}`,\n        4: () => `cuatrocientos ${Decenas(numDecenas)}`,\n        5: () => `quinientos ${Decenas(numDecenas)}`,\n        6: () => `seiscientos ${Decenas(numDecenas)}`,\n        7: () => `setecientos ${Decenas(numDecenas)}`,\n        8: () => `ochocientos ${Decenas(numDecenas)}`,\n        9: () => `novecientos ${Decenas(numDecenas)}`,\n    };\n    return centenas[numCentenas]?.() ?? Decenas(numDecenas);\n    //   default return Decenas(numDecenas);\n}\n\nfunction Miles(num: number) {\n    let divisor = 1e3;\n    let miles = Math.floor(num / divisor);\n    let resto = num - miles * divisor;\n\n    let strMiles = Seccion(num, divisor, 'mil', 'mil');\n    let strCentenas = Centenas(resto);\n\n    console.log({ divisor, miles, resto, strMiles, strCentenas });\n    return strMiles == '' ? strCentenas : `${strMiles} ${strCentenas}`;\n}\n\nfunction Millones(num: number) {\n    let divisor = 1e6;\n    let cientos = Math.floor(num / divisor);\n    let resto = num - cientos * divisor;\n    //    let de = \"\";\n    let strMillones = Seccion(num, divisor, 'un millon', 'millones');\n    let strMiles = Miles(resto);\n\n    if (strMillones == '') return strMiles;\n\n    if (strMiles == '') strMiles = 'de';\n\n    return strMillones + ' ' + strMiles;\n}\n\nfunction Seccion(num: number, divisor: number, strSingular: string, strPlural: string) {\n    let cientos = Math.floor(num / divisor);\n    let resto = num - cientos * divisor;\n\n    let letras = '';\n\n    if (cientos > 0)\n        if (cientos > 1) letras = `${Centenas(cientos)} ${strPlural}`;\n        else letras = strSingular;\n\n    if (resto > 0) letras += '';\n\n    return letras;\n}\n\ntype IConfig = {\n    letrasMonedaPlural: string;\n    letrasMonedaSingular: string;\n    letrasMonedaCentavoSingular: string;\n    letrasMonedaCentavoPlural: string;\n    capitalize: boolean;\n};\n\nexport class NumerosATexto {\n    constructor(config: Partial<IConfig> = {}) {\n        this.config = this.#makeDefault(config);\n    }\n\n    private config: IConfig;\n\n    #makeDefault(newConfig: Partial<IConfig>): IConfig {\n        return {\n            letrasMonedaCentavoPlural: newConfig.letrasMonedaCentavoPlural ?? '',\n            letrasMonedaCentavoSingular: newConfig.letrasMonedaCentavoSingular ?? '',\n            letrasMonedaPlural: newConfig.letrasMonedaPlural ?? '',\n            letrasMonedaSingular: newConfig.letrasMonedaSingular ?? '',\n            capitalize: false,\n        };\n    }\n\n    setConfig(newConfig: Partial<IConfig>) {\n        this.config = this.#makeDefault(newConfig);\n    }\n\n    getConfig() {\n        return this.config;\n    }\n\n    #sanitizer(value: string) {\n        return value.replace('  ', ' ').trim();\n    }\n\n    #capitalize(value: string): string {\n        const newValue = value.toLowerCase();\n        return newValue.charAt(0).toUpperCase() + newValue.slice(1);\n    }\n\n    public convertir(num: number) {\n        const data = {\n            numero: num,\n            enteros: Math.floor(num),\n            centavos: Math.round(num * 100) - Math.floor(num) * 100,\n            letrasCentavos: '',\n        };\n\n        if (data.centavos > 0) {\n            data.letrasCentavos =\n                'con ' +\n                Millones(data.centavos) +\n                ' ' +\n                (data.centavos == 1 ? this.config.letrasMonedaCentavoSingular : this.config.letrasMonedaCentavoPlural);\n        }\n        if (data.enteros == 0) return 'cero';\n\n        const value = `${Millones(data.enteros)} ${\n            data.enteros == 1 ? this.config.letrasMonedaSingular : this.config.letrasMonedaPlural\n        } ${data.letrasCentavos}`;\n        let sanitizedValue = this.#sanitizer(value);\n        return this.config.capitalize ? this.#capitalize(sanitizedValue) : sanitizedValue;\n    }\n}\n\nexport const numerosATexto = new NumerosATexto();\n"],"names":[],"mappings":"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"}